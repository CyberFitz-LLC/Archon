From d8db2f9706b4bf9cac221ca98f7365c4924ed744 Mon Sep 17 00:00:00 2001
From: John Fitzpatrick <john@cyberfitz.org>
Date: Sun, 10 Aug 2025 09:47:56 -0700
Subject: [PATCH 06/38] Complete upgrade script with corrected multi-parameter
 function implementations

- Updated match_archon_crawled_pages function body to use IF/ELSIF logic with individual parameters
- Updated match_archon_code_examples function signature and body to match new multi-parameter approach
- Both functions now correctly handle query_embedding_768, query_embedding_1024, query_embedding_1536, query_embedding_3072 parameters
- Maintains consistency with complete_setup.sql implementation
- Completes user's shower thought request to replace original functions with dynamic logic
---
 .../upgrade_multi_dimensional_vectors.sql     | 210 ++++++++----------
 1 file changed, 98 insertions(+), 112 deletions(-)

diff --git a/migration/upgrade_multi_dimensional_vectors.sql b/migration/upgrade_multi_dimensional_vectors.sql
index db8184a..2849d88 100644
--- a/migration/upgrade_multi_dimensional_vectors.sql
+++ b/migration/upgrade_multi_dimensional_vectors.sql
@@ -193,7 +193,10 @@ BEGIN
     
     -- Update the legacy match_archon_crawled_pages function with dynamic multi-dimensional logic
     CREATE OR REPLACE FUNCTION match_archon_crawled_pages (
-      query_embedding VECTOR(1536) DEFAULT NULL,
+      query_embedding_768 VECTOR(768) DEFAULT NULL,
+      query_embedding_1024 VECTOR(1024) DEFAULT NULL,
+      query_embedding_1536 VECTOR(1536) DEFAULT NULL,
+      query_embedding_3072 VECTOR(3072) DEFAULT NULL,
       match_count INT DEFAULT 10,
       filter JSONB DEFAULT '{}'::jsonb,
       source_filter TEXT DEFAULT NULL
@@ -208,62 +211,52 @@ BEGIN
     )
     LANGUAGE plpgsql
     AS $$
-    #variable_conflict use_column
-    DECLARE
-      embedding_dimensions INT;
     BEGIN
-      -- Auto-detect embedding dimensions from the provided vector
-      IF query_embedding IS NOT NULL THEN
-        embedding_dimensions := array_length(query_embedding, 1);
-        
-        -- Route to appropriate embedding column based on dimensions
-        IF embedding_dimensions = 768 THEN
-          RETURN QUERY
-          SELECT
-            id, url, chunk_number, content, metadata, source_id,
-            1 - (archon_crawled_pages.embedding_768 <=> query_embedding::VECTOR(768)) AS similarity
-          FROM archon_crawled_pages
-          WHERE metadata @> filter
-            AND (source_filter IS NULL OR source_id = source_filter)
-            AND embedding_768 IS NOT NULL
-          ORDER BY archon_crawled_pages.embedding_768 <=> query_embedding::VECTOR(768)
-          LIMIT match_count;
-        ELSIF embedding_dimensions = 1024 THEN
-          RETURN QUERY
-          SELECT
-            id, url, chunk_number, content, metadata, source_id,
-            1 - (archon_crawled_pages.embedding_1024 <=> query_embedding::VECTOR(1024)) AS similarity
-          FROM archon_crawled_pages
-          WHERE metadata @> filter
-            AND (source_filter IS NULL OR source_id = source_filter)
-            AND embedding_1024 IS NOT NULL
-          ORDER BY archon_crawled_pages.embedding_1024 <=> query_embedding::VECTOR(1024)
-          LIMIT match_count;
-        ELSIF embedding_dimensions = 1536 THEN
-          RETURN QUERY
-          SELECT
-            id, url, chunk_number, content, metadata, source_id,
-            1 - (archon_crawled_pages.embedding_1536 <=> query_embedding) AS similarity
-          FROM archon_crawled_pages
-          WHERE metadata @> filter
-            AND (source_filter IS NULL OR source_id = source_filter)
-            AND embedding_1536 IS NOT NULL
-          ORDER BY archon_crawled_pages.embedding_1536 <=> query_embedding
-          LIMIT match_count;
-        ELSIF embedding_dimensions = 3072 THEN
-          RETURN QUERY
-          SELECT
-            id, url, chunk_number, content, metadata, source_id,
-            1 - (archon_crawled_pages.embedding_3072 <=> query_embedding::VECTOR(3072)) AS similarity
-          FROM archon_crawled_pages
-          WHERE metadata @> filter
-            AND (source_filter IS NULL OR source_id = source_filter)
-            AND embedding_3072 IS NOT NULL
-          ORDER BY archon_crawled_pages.embedding_3072 <=> query_embedding::VECTOR(3072)
-          LIMIT match_count;
-        ELSE
-          RAISE EXCEPTION 'Unsupported embedding dimensions: %. Supported dimensions: 768, 1024, 1536, 3072', embedding_dimensions;
-        END IF;
+      -- Route to appropriate embedding column based on which parameter is provided
+      IF query_embedding_768 IS NOT NULL THEN
+        RETURN QUERY
+        SELECT
+          id, url, chunk_number, content, metadata, source_id,
+          1 - (archon_crawled_pages.embedding_768 <=> query_embedding_768) AS similarity
+        FROM archon_crawled_pages
+        WHERE metadata @> filter
+          AND (source_filter IS NULL OR source_id = source_filter)
+          AND embedding_768 IS NOT NULL
+        ORDER BY archon_crawled_pages.embedding_768 <=> query_embedding_768
+        LIMIT match_count;
+      ELSIF query_embedding_1024 IS NOT NULL THEN
+        RETURN QUERY
+        SELECT
+          id, url, chunk_number, content, metadata, source_id,
+          1 - (archon_crawled_pages.embedding_1024 <=> query_embedding_1024) AS similarity
+        FROM archon_crawled_pages
+        WHERE metadata @> filter
+          AND (source_filter IS NULL OR source_id = source_filter)
+          AND embedding_1024 IS NOT NULL
+        ORDER BY archon_crawled_pages.embedding_1024 <=> query_embedding_1024
+        LIMIT match_count;
+      ELSIF query_embedding_1536 IS NOT NULL THEN
+        RETURN QUERY
+        SELECT
+          id, url, chunk_number, content, metadata, source_id,
+          1 - (archon_crawled_pages.embedding_1536 <=> query_embedding_1536) AS similarity
+        FROM archon_crawled_pages
+        WHERE metadata @> filter
+          AND (source_filter IS NULL OR source_id = source_filter)
+          AND embedding_1536 IS NOT NULL
+        ORDER BY archon_crawled_pages.embedding_1536 <=> query_embedding_1536
+        LIMIT match_count;
+      ELSIF query_embedding_3072 IS NOT NULL THEN
+        RETURN QUERY
+        SELECT
+          id, url, chunk_number, content, metadata, source_id,
+          1 - (archon_crawled_pages.embedding_3072 <=> query_embedding_3072) AS similarity
+        FROM archon_crawled_pages
+        WHERE metadata @> filter
+          AND (source_filter IS NULL OR source_id = source_filter)
+          AND embedding_3072 IS NOT NULL
+        ORDER BY archon_crawled_pages.embedding_3072 <=> query_embedding_3072
+        LIMIT match_count;
       ELSE
         RAISE EXCEPTION 'No query embedding provided';
       END IF;
@@ -272,7 +265,10 @@ BEGIN
     
     -- Update the legacy match_archon_code_examples function with dynamic multi-dimensional logic
     CREATE OR REPLACE FUNCTION match_archon_code_examples (
-      query_embedding VECTOR(1536) DEFAULT NULL,
+      query_embedding_768 VECTOR(768) DEFAULT NULL,
+      query_embedding_1024 VECTOR(1024) DEFAULT NULL,
+      query_embedding_1536 VECTOR(1536) DEFAULT NULL,
+      query_embedding_3072 VECTOR(3072) DEFAULT NULL,
       match_count INT DEFAULT 10,
       filter JSONB DEFAULT '{}'::jsonb,
       source_filter TEXT DEFAULT NULL
@@ -288,62 +284,52 @@ BEGIN
     )
     LANGUAGE plpgsql
     AS $$
-    #variable_conflict use_column
-    DECLARE
-      embedding_dimensions INT;
     BEGIN
-      -- Auto-detect embedding dimensions from the provided vector
-      IF query_embedding IS NOT NULL THEN
-        embedding_dimensions := array_length(query_embedding, 1);
-        
-        -- Route to appropriate embedding column based on dimensions
-        IF embedding_dimensions = 768 THEN
-          RETURN QUERY
-          SELECT
-            id, url, chunk_number, content, summary, metadata, source_id,
-            1 - (archon_code_examples.embedding_768 <=> query_embedding::VECTOR(768)) AS similarity
-          FROM archon_code_examples
-          WHERE metadata @> filter
-            AND (source_filter IS NULL OR source_id = source_filter)
-            AND embedding_768 IS NOT NULL
-          ORDER BY archon_code_examples.embedding_768 <=> query_embedding::VECTOR(768)
-          LIMIT match_count;
-        ELSIF embedding_dimensions = 1024 THEN
-          RETURN QUERY
-          SELECT
-            id, url, chunk_number, content, summary, metadata, source_id,
-            1 - (archon_code_examples.embedding_1024 <=> query_embedding::VECTOR(1024)) AS similarity
-          FROM archon_code_examples
-          WHERE metadata @> filter
-            AND (source_filter IS NULL OR source_id = source_filter)
-            AND embedding_1024 IS NOT NULL
-          ORDER BY archon_code_examples.embedding_1024 <=> query_embedding::VECTOR(1024)
-          LIMIT match_count;
-        ELSIF embedding_dimensions = 1536 THEN
-          RETURN QUERY
-          SELECT
-            id, url, chunk_number, content, summary, metadata, source_id,
-            1 - (archon_code_examples.embedding_1536 <=> query_embedding) AS similarity
-          FROM archon_code_examples
-          WHERE metadata @> filter
-            AND (source_filter IS NULL OR source_id = source_filter)
-            AND embedding_1536 IS NOT NULL
-          ORDER BY archon_code_examples.embedding_1536 <=> query_embedding
-          LIMIT match_count;
-        ELSIF embedding_dimensions = 3072 THEN
-          RETURN QUERY
-          SELECT
-            id, url, chunk_number, content, summary, metadata, source_id,
-            1 - (archon_code_examples.embedding_3072 <=> query_embedding::VECTOR(3072)) AS similarity
-          FROM archon_code_examples
-          WHERE metadata @> filter
-            AND (source_filter IS NULL OR source_id = source_filter)
-            AND embedding_3072 IS NOT NULL
-          ORDER BY archon_code_examples.embedding_3072 <=> query_embedding::VECTOR(3072)
-          LIMIT match_count;
-        ELSE
-          RAISE EXCEPTION 'Unsupported embedding dimensions: %. Supported dimensions: 768, 1024, 1536, 3072', embedding_dimensions;
-        END IF;
+      -- Route to appropriate embedding column based on which parameter is provided
+      IF query_embedding_768 IS NOT NULL THEN
+        RETURN QUERY
+        SELECT
+          id, url, chunk_number, content, summary, metadata, source_id,
+          1 - (archon_code_examples.embedding_768 <=> query_embedding_768) AS similarity
+        FROM archon_code_examples
+        WHERE metadata @> filter
+          AND (source_filter IS NULL OR source_id = source_filter)
+          AND embedding_768 IS NOT NULL
+        ORDER BY archon_code_examples.embedding_768 <=> query_embedding_768
+        LIMIT match_count;
+      ELSIF query_embedding_1024 IS NOT NULL THEN
+        RETURN QUERY
+        SELECT
+          id, url, chunk_number, content, summary, metadata, source_id,
+          1 - (archon_code_examples.embedding_1024 <=> query_embedding_1024) AS similarity
+        FROM archon_code_examples
+        WHERE metadata @> filter
+          AND (source_filter IS NULL OR source_id = source_filter)
+          AND embedding_1024 IS NOT NULL
+        ORDER BY archon_code_examples.embedding_1024 <=> query_embedding_1024
+        LIMIT match_count;
+      ELSIF query_embedding_1536 IS NOT NULL THEN
+        RETURN QUERY
+        SELECT
+          id, url, chunk_number, content, summary, metadata, source_id,
+          1 - (archon_code_examples.embedding_1536 <=> query_embedding_1536) AS similarity
+        FROM archon_code_examples
+        WHERE metadata @> filter
+          AND (source_filter IS NULL OR source_id = source_filter)
+          AND embedding_1536 IS NOT NULL
+        ORDER BY archon_code_examples.embedding_1536 <=> query_embedding_1536
+        LIMIT match_count;
+      ELSIF query_embedding_3072 IS NOT NULL THEN
+        RETURN QUERY
+        SELECT
+          id, url, chunk_number, content, summary, metadata, source_id,
+          1 - (archon_code_examples.embedding_3072 <=> query_embedding_3072) AS similarity
+        FROM archon_code_examples
+        WHERE metadata @> filter
+          AND (source_filter IS NULL OR source_id = source_filter)
+          AND embedding_3072 IS NOT NULL
+        ORDER BY archon_code_examples.embedding_3072 <=> query_embedding_3072
+        LIMIT match_count;
       ELSE
         RAISE EXCEPTION 'No query embedding provided';
       END IF;
-- 
2.39.5

